g_g_void proc
t0=b*c
t1=t0/d
t2=a+t1
t3=t2-e
a=t3
g_g_void endp

g_g_integer,integer proc
t4=call g_,0
L5:
t6=0
t7=t6==10
if(t7==true)jmp L8
t6=t6+1
jmp L5
L8:
g_g_integer,integer endp

g_g_integer,integer,integer proc
t10=a==1
if(t10==false)jmp L11
jmp L9
L11:
t12=a==5
if(t12==false)jmp L13
jmp L9
L13:
t14=a==2
if(t14==false)jmp L15
jmp L9
L15:
t16=b+c
a=t16
L9:
g_g_integer,integer,integer endp

g_g2_integer proc
g_g2_integer endp

test_t1_void proc
t17=call g_,0
param 1
t18=call g_integer,1
param 1
param 2
t19=call g_integer,integer,2
param 1
param 2
param 3
t20=call g_integer,integer,integer,3
param 1
param 2
param 3
param 4
t21=call g_integer,integer,integer,integer,4
test_t1_void endp

Main proc
t22=b*c
t23=t22/d
t24=a+t23
t25=t24-e
t26=6.0*"abc"
t27=t25-t26
param 1
param 1
param 1
t28=call f_integer,integer,integer,3
t29=3*3.0
t30=t29*size of o
param 9
param 4.0
param 'a'
t31=call a_integer,decimal,char,3
t32=t28*o[t30].at31
t33=t27-t32
a=t33
t34=a+b
t35=t34<c
if(t35==false)jmp L36
jmp L37
L36:
t38=a-b
a=t38
L37:
param 4
param 4
param 4
t39=call a.u_integer,integer,integer,3
t40=a+1
a=t40
t41=5*size of a.b
t42=a.b[t41]*4
a.b[t41]=t42
t43=5*size of y
t44=u*size of y[t43].h
t45=y[t43].h[t44]/8
y[t43].h[t44]=t45
t46=a.k-7
a.k=t46
t47=6*size of q
t48=a+b
q[t47].a=t48
Main endp
